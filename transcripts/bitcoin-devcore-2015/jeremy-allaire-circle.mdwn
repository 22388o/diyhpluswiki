Circle

Jeremy Allaire, Sean Neville

We are excited to be here and sponsoring this event. We have backgrounds in working on developer tools that goes back to the early days of something.

How do we mature the development of Bitcoin Core itself? One of the things that is useful is suss out the key components of it. In a standard you have a spec, it could be a whitepaper, and then you have a reference implementation, and then a test suite that enforces interoperability. The test suite is what enforces the standard. It's not the text in the whitepaper that says what the standard is... If there is anyone that can satisfy how many hundreds of thousands of tests, if you can write software that can satisfy these tests has written an interoperable implementation. The existing C++ code, there's the Satoshi whitepaper, but really the code the source code itself is the spec. The RI is important. They are explicitly tied. I am not talking about certification testing or branding or licensing.. if someone was crazy enough to reimplement this ledger and the set of protocols, that it's actually interoperable with what has been built in Bitcoin Core, there is no test suite for that today... How do we mature the process? If I were a developer, what is the first pull request that I could submit ? I would start with the test area. And then I would do it with the thought that ultimately what needs to happen is there should be some sort of test suite that ensures that when new variations that are introduced that there is agreement that what the interop looks like. And then that allows other people to get plugged into the process, there is no big committee that meets, there's no giant software companies that have a voice, it's more a meritocracy which I think is okay up until today, but sometimes when projects mature it becomes difficult for people who do not necessarily fit within that culture of communicating in this particular dev email list or on IRC, people who have nothing to add don't really fit into developing software. So it's more like how do we pull people into this, how do we get software companies into this system? What's theright format without getting overly complicated? How do we let people plug into this system? How do we make it easier for people to write code and innovate on what we're collectively building?

"Trust".. what does that involve? Is there a generational difference in how people think about this technology? What do traditional institutional stakeholders need to trust to integrate established industries with this technology? How do we think about accountability which is part of trust, with the kind of stakeholders that are involved in the infrastructure layers of Bitcoin and the blockchain? Our target market inherently trusts internet technology. That it can do anything. As you get into older generations, they don't have that trust. They distrust those facets. It really plays out. The younger audiences assume instant connectivity. They think of it as a public good. The folks that have been running intermediaries have the opposite reaction. We interact with bankers, auditors, accountants, lawyers, regulators, who else that is big and scary? Those are the big scary guys. Just the idea of using math and algorithms versus using people is really hard for these institutions. If you step back, there's these trust industries that were built on control over rights to making entries into ledgers, intermediating access and claiming provenance and authenticity on those records. That's banks, law firms, accounting firms, auditing firms, insurance companies, mortgage companies, etc. In the future, we think that a lot of the things that people do with these manual processes about ledger and records keeping could be automated in interesting ways. This is scary to those people. It's a key issue. It's enlightening to me that when we were in DC, we got not grilled but we got lots of questions from people in regulatory environments it kind of realizes the key issue is that using cryptography is far more strange to them than trusting some individual to do things. It's not even really a technical issue, it's a big disconnect, you can kind of see as we're talking about various topics you kind of see people nodding their heads, those are the people who would be okay with using computers, whereas other people think it leads to the Terminator showing up and he will be adjucating our payments or something. We're regulated now, we're regulated as a kind of financial institution and by law we're required to keep full reserves of our customer's funds, whether dollars or bitcoin. In the past, if a company like us had to be audited, the auditor would ask for bank statements, or could we get access to a report that your Oracle financials produced, and we will trust that nobody manipulated Oracle financials, or we trust that nobody is doing different journal entries in the firm... When we tell them that you can monitor addresses, they can't understna dthat. (Well duh, that's because it's a false statement). They are far more comfortbale with an excel spreadsheet (then you should integrate vbscript/rpc commands, sigh). The person who has the job of stewarding numbers are terrified of this. There is trust of people in the system, the trust issue is complicated, we have taken away the need to trust people... lots of people don't even read the release notes when they upgrade hteir nodes, they don't read pull requests, so they trust that the process of open source development will result in software they can trust, when someone signs a release they are trusting the whole chain... they are trusting people to be incented by the incentives implicit in the protocol.. Obviously the protocol is setup so that people are incented to do the right thing, and we're trusting that people are incented by financial incentives at all. There are people who don't care about financial gain who would be willing to destroy the network. We are trusting miners to a certain degree (??). Not having to make decisions about transactional echange is huge.

"The root problem with conventional currency is all the trust thatâ€™s required to make it work. The central bank must be trusted not to debase the currency, but the history of fiat currencies is full of breaches of that trust. Banks must be trusted to hold our money and transfer it electronically, but they lend it out in waves of credit bubbles with barely a fraction in reserve. We have to trust them with our privacy, trust them not to let identity thieves drain our accounts. Their massive overhead costs make micropayments impossible."

"Identity is a key concept"... (blah, no thank you). Reputation, federated identity, regulatory approaches to know your customer, anti-money laundering, fraud, risk and things like that in transactions and it layers into protecting consumer privacy and avoiding criminal anonymity for certain kinds of things. It's an important issue. I have long been passionate about identity for 12 years including federated identity. There is a fundamental relationship between government identity and financial identity. They are tightly coupled. If you talk with governments and large financial institutions, these are the issues they are grappling with. They want identity. They want identity for their citizens. Sean and I have talked about these themes. I think the blockchain has blown open the reputation and identity stuff.... the concept of Sybil attacks, and public key cryptography and how people ((don't)) need identity is a really powerful concept. It's pretty important. There are two sides to when we talk about the benefits of Bitcoin as a transaction medium. One is that, hey, we have this existing internet which has been built on.... ((Nevermind, I really can't tolerate this. They don't seem to understand Sybil attacks.))
